import{_ as n,c as s,o as a,a2 as t}from"./chunks/framework.CexspsV9.js";const e="/omni-ui/assets/expandableText1.C43Ylnpt.jpeg",p="/omni-ui/assets/expandableText2.D2eyu72R.jpeg",u=JSON.parse('{"title":"可折叠文本ExpandableText","description":"","frontmatter":{},"headers":[],"relativePath":"components/view/expandabletext.md","filePath":"components/view/expandabletext.md"}'),l={name:"components/view/expandabletext.md"},i=t('<h1 id="可折叠文本expandabletext" tabindex="-1">可折叠文本ExpandableText <a class="header-anchor" href="#可折叠文本expandabletext" aria-label="Permalink to &quot;可折叠文本ExpandableText&quot;">​</a></h1><h2 id="一、效果总览" tabindex="-1">一、效果总览 <a class="header-anchor" href="#一、效果总览" aria-label="Permalink to &quot;一、效果总览&quot;">​</a></h2><div style="display:flex;gap:30px;justify-content:flex-start;"><img src="'+e+'" width="200"><img src="'+p+`" width="200"></div><h2 id="二、描述" tabindex="-1">二、描述 <a class="header-anchor" href="#二、描述" aria-label="Permalink to &quot;二、描述&quot;">​</a></h2><p>可折叠/展开的文本框，支持自定义文本样式</p><h2 id="三、构造函数及参数说明" tabindex="-1">三、构造函数及参数说明 <a class="header-anchor" href="#三、构造函数及参数说明" aria-label="Permalink to &quot;三、构造函数及参数说明&quot;">​</a></h2><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>OmniExpandableText({</span></span>
<span class="line"><span>  isFold: boolean,</span></span>
<span class="line"><span>  content: string,</span></span>
<span class="line"><span>  maxLine: number,</span></span>
<span class="line"><span>  contentFontColor: ResourceColor,</span></span>
<span class="line"><span>  contentFontSize: string | number | Resource,</span></span>
<span class="line"><span>  expandFontColor: ResourceColor,</span></span>
<span class="line"><span>  expandFontSize: string | number | Resource,</span></span>
<span class="line"><span>  foldText: ResourceStr,</span></span>
<span class="line"><span>  expandText: ResourceStr</span></span>
<span class="line"><span>  })</span></span></code></pre></div><table tabindex="0"><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">类型</th><th style="text-align:left;">必填</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">isFold</td><td style="text-align:left;">boolean</td><td style="text-align:left;">否</td><td style="text-align:left;">是否折叠文本，默认为true</td></tr><tr><td style="text-align:left;">content</td><td style="text-align:left;">string</td><td style="text-align:left;">否</td><td style="text-align:left;">文本内容</td></tr><tr><td style="text-align:left;">maxLine</td><td style="text-align:left;">number</td><td style="text-align:left;">否</td><td style="text-align:left;">折叠后展示的最大行数</td></tr><tr><td style="text-align:left;">contentFontColor</td><td style="text-align:left;">ResourceColor</td><td style="text-align:left;">否</td><td style="text-align:left;">文本字体颜色，默认为#43474D</td></tr><tr><td style="text-align:left;">contentFontSize</td><td style="text-align:left;">string | number | Resource</td><td style="text-align:left;">否</td><td style="text-align:left;">文本字体大小，默认为14fp</td></tr><tr><td style="text-align:left;">expandFontColor</td><td style="text-align:left;">ResourceColor</td><td style="text-align:left;">否</td><td style="text-align:left;">右下角&#39;展开&#39;文本的字体颜色，默认为#517A99</td></tr><tr><td style="text-align:left;">expandFontSize</td><td style="text-align:left;">string | number | Resource</td><td style="text-align:left;">否</td><td style="text-align:left;">右下角&#39;展开&#39;文本的字体大小，默认为14fp</td></tr><tr><td style="text-align:left;">foldText</td><td style="text-align:left;">ResourceStr</td><td style="text-align:left;">否</td><td style="text-align:left;">收起文案</td></tr><tr><td style="text-align:left;">expandText</td><td style="text-align:left;">ResourceStr</td><td style="text-align:left;">否</td><td style="text-align:left;">展开文案</td></tr></tbody></table><h2 id="四、代码演示" tabindex="-1">四、代码演示 <a class="header-anchor" href="#四、代码演示" aria-label="Permalink to &quot;四、代码演示&quot;">​</a></h2><h3 id="示例一-默认效果" tabindex="-1">示例一：默认效果 <a class="header-anchor" href="#示例一-默认效果" aria-label="Permalink to &quot;示例一：默认效果&quot;">​</a></h3><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>@Entry</span></span>
<span class="line"><span>@Component</span></span>
<span class="line"><span>struct ExpandableTextExample {</span></span>
<span class="line"><span>  @State content: string =</span></span>
<span class="line"><span>    &#39;这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容&#39; +</span></span>
<span class="line"><span>      &#39;这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容&#39; +</span></span>
<span class="line"><span>      &#39;这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容&#39; +</span></span>
<span class="line"><span>      &#39;这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  build() {</span></span>
<span class="line"><span>    NavDestination() {</span></span>
<span class="line"><span>      Column({ space: 10 }) {</span></span>
<span class="line"><span>        Text(&#39;示例一：默认样式&#39;)</span></span>
<span class="line"><span>            .fontSize(20)</span></span>
<span class="line"><span>            .fontWeight(FontWeight.Bold)</span></span>
<span class="line"><span>            .fontColor(0x333333)</span></span>
<span class="line"><span>            .padding({</span></span>
<span class="line"><span>              top: 20,</span></span>
<span class="line"><span>              bottom: 20,</span></span>
<span class="line"><span>              right: 20,</span></span>
<span class="line"><span>              left: 20</span></span>
<span class="line"><span>            })</span></span>
<span class="line"><span>            .width(&#39;100%&#39;)</span></span>
<span class="line"><span>          OmniExpandableText({</span></span>
<span class="line"><span>            content: this.content,</span></span>
<span class="line"><span>            maxLine: 5,</span></span>
<span class="line"><span>          }).margin(</span></span>
<span class="line"><span>            {</span></span>
<span class="line"><span>              left: 20,</span></span>
<span class="line"><span>              right: 20,</span></span>
<span class="line"><span>              bottom: 20</span></span>
<span class="line"><span>            }</span></span>
<span class="line"><span>          )</span></span>
<span class="line"><span>      }</span></span>
<span class="line"><span>      .alignItems(HorizontalAlign.Center)</span></span>
<span class="line"><span>      .width(&#39;100%&#39;)</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    .title(&#39;ExpandableText示例&#39;)</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>}</span></span></code></pre></div><h3 id="示例二-自定义样式" tabindex="-1">示例二：自定义样式 <a class="header-anchor" href="#示例二-自定义样式" aria-label="Permalink to &quot;示例二：自定义样式&quot;">​</a></h3><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>@Entry</span></span>
<span class="line"><span>@Component</span></span>
<span class="line"><span>struct ExpandableTextExample {</span></span>
<span class="line"><span>  @State content: string =</span></span>
<span class="line"><span>    &#39;这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容&#39; +</span></span>
<span class="line"><span>      &#39;这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容&#39; +</span></span>
<span class="line"><span>      &#39;这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容&#39; +</span></span>
<span class="line"><span>      &#39;这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容这是正文内容&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  build() {</span></span>
<span class="line"><span>    NavDestination() {</span></span>
<span class="line"><span>      Column({ space: 10 }) {</span></span>
<span class="line"><span>        Text(&#39;示例二：自定义样式&#39;)</span></span>
<span class="line"><span>            .fontSize(20)</span></span>
<span class="line"><span>            .fontWeight(FontWeight.Bold)</span></span>
<span class="line"><span>            .fontColor(0x333333)</span></span>
<span class="line"><span>            .padding({</span></span>
<span class="line"><span>              top: 20,</span></span>
<span class="line"><span>              bottom: 20,</span></span>
<span class="line"><span>              right: 20,</span></span>
<span class="line"><span>              left: 20</span></span>
<span class="line"><span>            })</span></span>
<span class="line"><span>            .width(&#39;100%&#39;)</span></span>
<span class="line"><span>          OmniExpandableText({</span></span>
<span class="line"><span>            content: this.content,</span></span>
<span class="line"><span>            maxLine: 6,</span></span>
<span class="line"><span>            contentFontColor: 0x333333,</span></span>
<span class="line"><span>            expandFontColor: 0xec623e</span></span>
<span class="line"><span>          })</span></span>
<span class="line"><span>            .margin({</span></span>
<span class="line"><span>              top: 20,</span></span>
<span class="line"><span>              bottom: 20,</span></span>
<span class="line"><span>              right: 20,</span></span>
<span class="line"><span>              left: 20</span></span>
<span class="line"><span>            })</span></span>
<span class="line"><span>      }</span></span>
<span class="line"><span>      .alignItems(HorizontalAlign.Center)</span></span>
<span class="line"><span>      .width(&#39;100%&#39;)</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    .title(&#39;ExpandableText示例&#39;)</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>}</span></span></code></pre></div>`,13),o=[i];function c(d,r,x,g,h,f){return a(),s("div",null,o)}const m=n(l,[["render",c]]);export{u as __pageData,m as default};
